combi lw 0 5 pos1           # $5 = 1 (stack pointer)
 lw 0 6 pos1                # $6 = 1 (temp)
 lw 0 1 inputN              # $1 = memory[inputN]
 lw 0 2 inputR              # $2 = memory[inputR]
 beq 0 2 return1            # if r == 0 goto return1
 beq 1 2 return1            # if n == r goto return1
return1 lw 0 3 pos1         # answer ($3) = 1
 lw 0 4 subAdr              # prepare to call subCombi. $4 = subAdr
 jalr 4 7                   #call subCombi; $7 = return addr; $3 = anwser
subCombi sw 5 7 stack       #save return addr on stack value($5) -> memory[stack pointer + @stack]
 add 5 6 5                  #increment stack pointer ($5)
 sw 5 1 stack               #save $1 on stack
 add 5 6 5                  #increment stack pointer ($5)
 sw 5 2 stack               #save $2 on stack
 add 5 6 5                  #increment stack pointer ($5)





















pos1 .fill 1
neg1 .fill -1
subAdr .fill subCombi
inputN .fill 7
inputR .fill 3
stack .fill 0