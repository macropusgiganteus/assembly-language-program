multi lw 0 1 pos0   # $1 = 0 (product)
 lw 0 2 inputC      # $2 = memory[inputC]
 lw 0 3 inputP      # $3 = memory[inputP]
 lw 0 4 pos1        # $4 = 1
loop nand 5 4 3     # keep nand value between mcand and temp into $5
 nand 5 5 5         # change nand-gate to and-gate
 beq 5 0 shift      # if value from $5 is equal 0 go to shift
 add 2 1 1          # add mplier to product
shift add 2 2 2     # shift left mcand by adding mcand
 add 4 4 4          # shift left temp by adding temp



pos1 .fill 1
pos0 .fill 0
neg1 .fill -1
subAdr .fill loop   # contains the address of loop
inputC .fill 5      # input multicand = 5
inputP .fill 7      # input multiplier = 7
stack .fill 0       # beginning of stack (value is irrelevent)
